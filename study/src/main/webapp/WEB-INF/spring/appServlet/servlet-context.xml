<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd">

	<!-- DispatcherServlet Context: 서블릿의 요청 처리 인프라를 정의 (View 지원 bean 설정 : Controller) -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- HTML 리소스 디렉토리 정의 -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- ViewResolver로 jsp와 name을 매핑 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.practive.study" />
	<!-- 베이스패키지 하위 모든 어노테이션을 스캔해서 빈으로 등록하겠다는 것-->

	<interceptors>
		<!-- 로그인이 되어 있어야 하는 페이지 : 현재 사용자의 로그인 체크-->
		<interceptor>
			<mapping path="/payment.do" />
			<beans:bean id="LoginCheckInterceptor" class="com.practive.study.common.Interceptor.LoginCheckInterceptor"></beans:bean>
		</interceptor>
		<!-- loggerInterceptor -->
		<interceptor>
			<mapping path="/**" />
			<mapping path="/**/*.do" />
			<exclude-mapping path="/member.do" />
			<beans:bean id="loggerInterceptor" class="com.practive.study.common.Interceptor.LoggerInterceptor"></beans:bean>
		</interceptor>
	</interceptors>
	
	<!-- 웹 소켓 사용을 위한 bean 객체 등록 -->
	<websocket:handlers>
		<websocket:mapping handler="websocketHandler" path="/websocket/" />
		<websocket:sockjs />
	</websocket:handlers>
	<beans:bean id="websocketHandler" class="com.practive.study.websocketHandler"/>

</beans:beans>

	